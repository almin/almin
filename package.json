{
  "private": true,
  "name": "almin-monorepo",
  "version": "0.11.0",
  "description": "Almin monorepo.",
  "directories": {
    "doc": "docs",
    "example": "example"
  },
  "workspaces": [
    "packages/*",
    "packages/@almin/*"
  ],
  "license": "MIT",
  "resolutions": {
    "@types/react": "16.14.2",
    "@types/react-dom": "16.9.10"
  },
  "devDependencies": {
    "@alrra/travis-scripts": "^3.0.1",
    "@azu/docco": "^0.7.2",
    "eslint-config-prettier": "^2.10.0",
    "eslint-plugin-prettier": "^2.7.0",
    "husky": "^3.1.0",
    "lerna": "^3.22.1",
    "lint-staged": "^10.5.1",
    "prettier": "^2.0.5",
    "textlint": "^11.7.6",
    "textlint-filter-rule-comments": "^1.2.2",
    "textlint-rule-alex": "^2.1.0",
    "textlint-rule-common-misspellings": "^1.0.1",
    "textlint-rule-no-dead-link": "^4.7.0",
    "textlint-rule-prh": "^5.3.0"
  },
  "scripts": {
    "bootstrap": "lerna bootstrap",
    "versionup": "lerna version --conventional-commits",
    "versionup:patch": "lerna version patch --conventional-commits",
    "versionup:minor": "lerna version minor --conventional-commits",
    "versionup:major": "lerna version major --conventional-commits",
    "release": "lerna publish from-package",
    "copy-changelog": "git tag --points-at HEAD | xargs -I{} monorepo-utils-collect-changelog {} | pbcopy",
    "bench": "cd perf/benchmark && npm run bench",
    "build": "lerna run build --ignore 'example-*'",
    "test": "yarn run build && lerna run test --ignore example-perf-benchmark",
    "test:memory-leak": "cd perf/node-memory-leak-testing && npm it",
    "test:bench": "cd perf/benchmark && npm it",
    "exec": "lerna exec",
    "start:docs": "cd website && yarn start",
    "lint:docs": "textlint --cache -f pretty-error README.md docs/",
    "lint:docs:fix": "textlint --fix --cache README.md docs/",
    "build:docs": "cd website && yarn run build",
    "build:docs:api": "bash ./tools/update-api-reference.sh",
    "ci": "lerna run ci --ignore benchmark",
    "clean": "lerna run clean",
    "prettier": "prettier --write '**/*.{js,jsx,ts,tsx,css}'"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx,css}": [
      "prettier --write"
    ],
    "docs/*.md": [
      "textlint --cache -f pretty-error"
    ]
  },
  "husky": {
    "hooks": {
      "post-commit": "git reset",
      "pre-commit": "lint-staged"
    }
  }
}
