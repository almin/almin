{"version":3,"sources":["../../__obj/src/payload/ErrorPayload.js"],"names":["isErrorPayload","TYPE","ErrorPayload","error","type","v"],"mappings":"AAAA;AACA;;;;;;QAgBgBA,c,GAAAA,c;;AAfhB;;;;;;;;;;AACA;;;;AAIO,IAAMC,sBAAO,uBAAb;AACP;;;;IAGaC,Y,WAAAA,Y;;;AACT,gCAAuB;AAAA,YAATC,KAAS,QAATA,KAAS;;AAAA;;AAAA,qDACnB,oBAAM,EAAEC,MAAMH,IAAR,EAAN,CADmB;;AAEnB,cAAKE,KAAL,GAAaA,KAAb;AAFmB;AAGtB;;;;;AAEE,SAASH,cAAT,CAAwBK,CAAxB,EAA2B;AAC9B,WAAOA,EAAED,IAAF,KAAWH,IAAlB;AACH","file":"ErrorPayload.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { Payload } from \"./Payload\";\n/**\n *  XXX: This is exported for an unit testing.\n *  DO NOT USE THIS in your application.\n */\nexport const TYPE = \"ALMIN__ErrorPayload__\";\n/**\n * This payload is executed\n */\nexport class ErrorPayload extends Payload {\n    constructor({ error }) {\n        super({ type: TYPE });\n        this.error = error;\n    }\n}\nexport function isErrorPayload(v) {\n    return v.type === TYPE;\n}\n"]}