{"version":3,"sources":["../../__obj/src/payload/WillExecutedPayload.js"],"names":["isWillExecutedPayload","TYPE","WillExecutedPayload","args","type","v"],"mappings":"AAAA;AACA;;;;;;QAagBA,qB,GAAAA,qB;;AAZhB;;;;;;;;;;AACA;;;;AAIO,IAAMC,sBAAO,qCAAb;;IACMC,mB,WAAAA,mB;;;AACT,uCAA2B;AAAA,6BAAbC,IAAa;AAAA,YAAbA,IAAa,6BAAN,EAAM;;AAAA;;AAAA,qDACvB,oBAAM,EAAEC,MAAMH,IAAR,EAAN,CADuB;;AAEvB,cAAKE,IAAL,GAAYA,IAAZ;AAFuB;AAG1B;;;;;AAEE,SAASH,qBAAT,CAA+BK,CAA/B,EAAkC;AACrC,WAAOA,EAAED,IAAF,KAAWH,IAAlB;AACH","file":"WillExecutedPayload.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport { Payload } from \"./Payload\";\n/**\n *  XXX: This is exported for an unit testing.\n *  DO NOT USE THIS in your application.\n */\nexport const TYPE = \"ALMIN__WILL_EXECUTED_EACH_USECASE__\";\nexport class WillExecutedPayload extends Payload {\n    constructor({ args = [] }) {\n        super({ type: TYPE });\n        this.args = args;\n    }\n}\nexport function isWillExecutedPayload(v) {\n    return v.type === TYPE;\n}\n"]}